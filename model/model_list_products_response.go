/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// ListProductsResponse struct for ListProductsResponse
type ListProductsResponse struct {
	Products []GetProductResponse `json:"products,omitempty"`
	Sequence *int32 `json:"sequence,omitempty,string"`
	HasNext *bool `json:"has_next,omitempty"`
	Cursor *string `json:"cursor,omitempty"`
}

// NewListOrdersResponse instantiates a new ListOrdersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProductsResponse() *ListOrdersResponse {
	this := ListOrdersResponse{}
	return &this
}

// NewListOrdersResponseWithDefaults instantiates a new ListOrdersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProductsResponseWithDefaults() *ListProductsResponse {
	this := ListProductsResponse{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *ListProductsResponse) GetProducts() []GetProductResponse {
	if o == nil || isNil(o.Products) {
		var ret []GetProductResponse
		return ret
	}
	return o.Products
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse) GetOrdersOk() ([]GetProductResponse, bool) {
	if o == nil || isNil(o.Products) {
    return nil, false
	}
	return o.Products, true
}

// HasOrders returns a boolean if a field has been set.
func (o *ListProductsResponse) HasOrders() bool {
	if o != nil && !isNil(o.Products) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []Order and assigns it to the Orders field.
func (o *ListProductsResponse) SetOrders(v []GetProductResponse) {
	o.Products = v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *ListProductsResponse) GetSequence() int32 {
	if o == nil || isNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse) GetSequenceOk() (*int32, bool) {
	if o == nil || isNil(o.Sequence) {
    return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *ListProductsResponse) HasSequence() bool {
	if o != nil && !isNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *ListProductsResponse) SetSequence(v int32) {
	o.Sequence = &v
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *ListProductsResponse) GetHasNext() bool {
	if o == nil || isNil(o.HasNext) {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse) GetHasNextOk() (*bool, bool) {
	if o == nil || isNil(o.HasNext) {
    return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *ListProductsResponse) HasHasNext() bool {
	if o != nil && !isNil(o.HasNext) {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *ListProductsResponse) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *ListProductsResponse) GetCursor() string {
	if o == nil || isNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProductsResponse) GetCursorOk() (*string, bool) {
	if o == nil || isNil(o.Cursor) {
    return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *ListProductsResponse) HasCursor() bool {
	if o != nil && !isNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *ListProductsResponse) SetCursor(v string) {
	o.Cursor = &v
}

func (o ListProductsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !isNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !isNil(o.HasNext) {
		toSerialize["has_next"] = o.HasNext
	}
	if !isNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	return json.Marshal(toSerialize)
}

type NullableListProductsResponse struct {
	value *ListProductsResponse
	isSet bool
}

func (v NullableListProductsResponse) Get() *ListProductsResponse {
	return v.value
}

func (v *NullableListProductsResponse) Set(val *ListProductsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListProductsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListProductsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProductsResponse(val *ListProductsResponse) *NullableListProductsResponse {
	return &NullableListProductsResponse{value: val, isSet: true}
}

func (v NullableListProductsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProductsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


